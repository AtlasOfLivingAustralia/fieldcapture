name: MERIT build

on:
  push:
    branches:
      - githubactions
      - dev
      - master
      - feature/**
      - hotfix/**
      - release/**

env:
  TZ: Australia/Canberra

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Install nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - run: npm config set //npm.pkg.github.com/:_authToken $NODE_AUTH_TOKEN
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: npm install


      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0


      - name: Install and start elasticsearch
        run: |
          curl https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.17.29-amd64.deb -o elasticsearch.deb
          sudo dpkg -i --force-confnew elasticsearch.deb
          sudo chown -R elasticsearch:elasticsearch /etc/default/elasticsearch
          sudo sh -c 'echo ES_JAVA_OPTS=\"-Xmx1g -Xms1g\" >> /etc/default/elasticsearch'
          sudo service elasticsearch restart

      - name: Setup required MERIT folders
        run: |
          sudo mkdir -p /data/fieldcapture/cache
          sudo chmod o+xw /data
          sudo chmod o+xw /data/fieldcapture
          sudo chmod o+xw /data/fieldcapture/cache

      - name: Install and start mongodb
        uses: supercharge/mongodb-github-action@90004df786821b6308fb02299e5835d0dae05d0d #1.12.0
        with:
          mongodb-version: '8.0'

      - name: Install mongosh
        run: |
          sudo apt-get install gnupg
          wget -qO - https://www.mongodb.org/static/pgp/server-8.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg --dearmor
          echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh

      - name: Build and run jacoco coverage report with Gradle
        run: ./gradlew test
        env:
          GPR_USER: ${{env.GITHUB_ACTOR}}
          GPR_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Install javascript packages using the gradle clientInstall plugin
        run: ./gradlew clientInstall
        env:
          GPR_USER: ${{env.GITHUB_ACTOR}}
          GPR_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Run javascript unit tests
        run: node_modules/karma/bin/karma start karma.conf.js --single-run --browsers ChromeHeadless

      - name: Run MERIT functional tests
        run: ./src/main/scripts/runFunctionalTests.sh
        env:
          GPR_USER: ${{env.GITHUB_ACTOR}}
          GPR_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Clean to remove clover instrumentation
        run: ./gradlew clean
        env:
          GPR_USER: ${{env.GITHUB_ACTOR}}
          GPR_TOKEN: ${{secrets.GITHUB_TOKEN}}


      - name: Read the MERIT version from the gradle.properties file
        id: read_property
        uses: christian-draeger/read-properties@908f99d3334be3802ec7cb528395a69d19914e7b # v1.1.1
        with:
          path: './gradle.properties'
          properties: 'meritVersion'

      - uses: castlabs/get-package-version-id-action@7ef2d7bb74506a5ee3ff5412d4c977ba5c88e73f
        id: versions
        with:
          version: ${{steps.read_property.outputs.meritVersion}}
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/delete-package-versions@v5
        if: ${{ steps.versions.outputs.ids != '' }}
        with:
          package-name: "au.org.ala.fieldcapture"
          package-type: "maven"
          package-version-ids: "${{ steps.versions.outputs.ids }}"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish the JAR to the repository
        run: ./gradlew publish
        env:
          GPR_USER: ${{env.GITHUB_ACTOR}}
          GPR_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

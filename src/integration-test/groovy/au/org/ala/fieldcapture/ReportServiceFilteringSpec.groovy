package au.org.ala.fieldcapture

import pages.AdminClearCachePage
import pages.AdminTools
import pages.ReportPage
import pages.RlpProjectPage
import pages.modules.ReportCategory
import spock.lang.Stepwise

@Stepwise
class ReportServiceFilteringSpec extends StubbedCasSpec {

    def setupSpec() {
        useDataSet('dataset2')
    }

    def cleanup() {
        waitFor {
            logout(browser)
        }
    }

    // Clear the metadata cache to ensure the services and scores are loaded correctly.
    def clearCache() {
        setup:
        loginAsAlaAdmin(browser)

        when:
        to AdminTools
        clearCache()
        to AdminClearCachePage
        clearServiceListCache()

        then:
        waitFor { at AdminClearCachePage }
    }

    def "the reports can be regenerated by an FC_ADMIN"() {

        setup:
        String projectId = '1'
        loginAsMeritAdmin(browser)

        when: "Display the admin tab, navigate to the settings section then press the re-generate reports button"
        to RlpProjectPage, projectId
        adminTab.click()
        waitFor { adminContent.displayed }
        adminContent.projectSettingsTab.click()
        waitFor { adminContent.projectSettings.displayed }
        adminContent.projectSettings.regenerateReports()

        then:
        waitFor 20, { hasBeenReloaded() }

        when:
        displayReportingTab()
        projectReports.reportsByCategory.each { ReportCategory reportCategory ->
            if (reportCategory.showAllReportsCheckbox.displayed) {
                reportCategory.showAllReports()
            }
        }

        then:
        waitFor { projectReports.displayed }

        and: "The new reports are displayed"

        waitFor {
            projectReports.reports.size() == 27
            projectReports.reports[1].name != ""
        }
        projectReports.reports[0].name == "Year 2018/2019 - Quarter 1 Outputs Report"
        projectReports.reports[0].fromDate == "01-07-2018"
        projectReports.reports[0].toDate == "30-09-2018"


    }

    def "When no services are selected in the MERI plan only mandatory services will be shown on the outputs report"() {
        setup:
        String projectId = '1'
        loginAsUser('10', browser)

        when:
        to RlpProjectPage, projectId

        then:
        waitFor { at RlpProjectPage }

        when:
        reportingTab.click()

        then:
        waitFor { projectReports.displayed }

        when:
        projectReports.reports[0].edit()

        then:
        waitFor { at ReportPage }

        and: "Only the mandatory output sections are displayed."
        getFormSections().size() == 2
        getFormSections() == ['koRLP_-_Output_WHS', 'koRLP_-_Change_Management']

        when: "We leave the report to release the lock"
        exitReport()

        then:
        waitFor { at RlpProjectPage }
    }

    def "When services are selected in the MERI plan only mandatory and selected services will be shown on the outputs report"() {
        setup:
        String projectId = '1'
        loginAsUser('1', browser)

        when: "select activity 2 on the MERI plan"
        to RlpProjectPage, projectId

        waitFor { at RlpProjectPage }
        def meriPlan = openMeriPlanEditTab()
        meriPlan.aquireEditLock()
        waitFor {
            hasBeenReloaded()
        }
        at RlpProjectPage // reset at check time.

        meriPlan = openMeriPlanEditTab()
        meriPlan.projectServices[0].selectService("Communication materials")
        meriPlan.projectServices[0].selectScore("Number of communication materials published")
        meriPlan.projectServices[0].targets = "5"
        meriPlan.projectServices[0].date = "01-07-2021"
        meriPlan.save()

        and: "open the report"
        reportingTab.click()
        waitFor { projectReports.displayed }
        projectReports.reports[0].edit()

        then:
        waitFor { at ReportPage }

        and: "Only the mandatory and selected activities are displayed."
        getFormSections() == ['koRLP_-_Output_WHS', 'koRLP_-_Change_Management', 'koRLP_-_Communication_materials']

    }

}
